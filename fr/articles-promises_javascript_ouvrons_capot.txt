3:I[5613,[],""]
6:I[1778,[],""]
4:["locale","fr","d"]
5:["slug","articles-promises_javascript_ouvrons_capot","oc"]
8:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
9:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
a:{"display":"inline-block"}
b:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["0iMe3vHKCcHPUIZbS85nF",[[["",{"children":["(withLocale)",{"children":[["locale","fr","d"],{"children":[["slug","articles-promises_javascript_ouvrons_capot","oc"],{"children":["__PAGE__?{\"locale\":\"fr\",\"slug\":[\"articles-promises_javascript_ouvrons_capot\"]}",{}]}]},"$undefined","$undefined",true]}]}],["",{"children":["(withLocale)",{"children":[["locale","fr","d"],{"children":[["slug","articles-promises_javascript_ouvrons_capot","oc"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(withLocale)","children","$4","children","$5","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"https://insertafter.com/_next/static/css/cd8d1ff5c688cf4d.css","precedence":"next","crossOrigin":""}]]}]]},[null,"$L7",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(withLocale)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"https://insertafter.com/_next/static/css/655a273f6fe37552.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$8","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$9","children":"404"}],["$","div",null,{"style":"$a","children":["$","h2",null,{"style":"$b","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]],[null,"$Lc"]]]]
d:"$Sreact.strict_mode"
e:I[4630,["176","static/chunks/176-0a03be62efe5672b.js","960","static/chunks/app/(withLocale)/%5Blocale%5D/layout-3730889d272dc34b.js"],""]
f:I[4341,["176","static/chunks/176-0a03be62efe5672b.js","960","static/chunks/app/(withLocale)/%5Blocale%5D/layout-3730889d272dc34b.js"],""]
7:["$","$d",null,{"children":["$","html",null,{"lang":"fr","children":["$","body",null,{"className":"layout_body__jFZuu","children":[null,["$","header",null,{"className":"header_iaHeader__4vCMA","children":["$","div",null,{"className":"$undefined","children":["$","h1",null,{"children":["$","a",null,{"href":"/fr","title":"Retour à l’accueil","className":"header_iaHeaderLogo__0uNr1","children":["$","img",null,{"src":"/images/logo.svg","alt":"Logo d’InsertAfter"}]}]}]}]}],["$","$Le",null,{"locale":"fr","dictionary":{"home":{"label":"Accueil","title":"Retour à l’accueil"},"blog":{"label":"Blog","title":"Retour à l’index du blog"},"projects":{"label":"Projets","title":"Découvrir mes divers projets"},"about":{"label":"À propos","title":"En savoir plus à mon sujet"}}}],["$","$Lf",null,{"locale":"fr"}],["$","main",null,{"className":"layout_iaMain__6s2gl","children":["$","div",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(withLocale)","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$L10","notFoundStyles":[["$","link","0",{"rel":"stylesheet","href":"https://insertafter.com/_next/static/css/719d59f1b635ba1d.css","precedence":"next","crossOrigin":""}]],"styles":null}]}]}],["$","aside",null,{"className":"social_iaSocial__kdR1x","children":["$","nav",null,{"children":["$","ul",null,{"children":[["$","li",null,{"children":["$","a",null,{"href":"https://mastodon.social/@nfroidure","rel":"me","title":"Me suivre sur Mastodon","className":"social_iaSocialMastodon__MTF6o","children":["$","span",null,{"children":"Mastodon"}]}]}],["$","li",null,{"children":["$","a",null,{"href":"https://bsky.app/profile/nfroidure.bsky.social","rel":"me","title":"Me suivre sur Bluesky","className":"social_iaSocialBluesky__fKW6M","children":["$","span",null,{"children":"Bluesky"}]}]}],["$","li",null,{"children":["$","a",null,{"href":"https://twitter.com/nfroidure","title":"Me suivre sur Twitter","className":"social_iaSocialTwitter__9nU6R","children":["$","span",null,{"children":"Twitter"}]}]}],["$","li",null,{"children":["$","a",null,{"href":"https://github.com/nfroidure","title":"Voir mes projets sur GitHub","className":"social_iaSocialGithub__vcU5_","children":["$","span",null,{"children":"GitHub"}]}]}],["$","li",null,{"children":["$","a",null,{"href":"https://www.npmjs.org/~nfroidure","title":"Voir mon compte NPM","className":"social_iaSocialNpm__6nku5","children":["$","span",null,{"children":"NPM"}]}]}],["$","li",null,{"children":["$","a",null,{"href":"https://www.linkedin.com/in/nfroidure/","rel":"me","title":"Voir mon profil LinkedIn","className":"social_iaSocialLinkedin__pWACO","children":["$","span",null,{"children":"LinkedIn"}]}]}],["$","li",null,{"children":["$","a",null,{"href":"https://facebook.com/nicolas.froidure.douai","rel":"me","title":"Me suivre sur Facebook","className":"social_iaSocialFacebook__w4wfH","children":["$","span",null,{"children":"Facebook"}]}]}],["$","li",null,{"children":["$","a",null,{"href":"/fr/blog/index.atom","title":"S’abonner au flux RSS","className":"social_iaSocialFeed__gEQQ0","children":["$","span",null,{"children":"Flux RSS"}]}]}]]}]}]}],["$","footer",null,{"className":"footer_iaFooter__rhlnQ","children":["$","p",null,{"className":"footer_iaFooterContent__VZndF","children":["© Nicolas Froidure 2012-",2024]}]}]]}]}]}]
10:["$","section",null,{"className":"contentBlock_root__802UK","children":[["$","h1",null,{"className":"h1_root__VPXQG","children":"Page not found"}],["$","p",null,{"className":"not-found_p__fvcGn","children":[["$","img",null,{"className":"not-found_img__IT2jY","src":"https://media.giphy.com/media/12mPcp41D9a1i0/giphy.gif","alt":"404.png"}],["$","p",null,{"className":"p_root__SHE_W","children":"It seems that the page you look for doesn't exist."}]]}]]}]
11:I[5250,["176","static/chunks/176-0a03be62efe5672b.js","790","static/chunks/790-a194f74901d33197.js","730","static/chunks/app/(withLocale)/%5Blocale%5D/%5B%5B...slug%5D%5D/page-992952bac383cfc2.js"],""]
2:[["$","section",null,{"className":"contentBlock_root__802UK","children":[[["$","h1",null,{"className":"h1_root__VPXQG","children":[["$","span","0",{"children":"Les promises avec JavaScript : ouvrons le capot !"}]]}],["$","hr",null,{"className":"hr_root__iMEe9"}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"⚠ Attention: Cet article est ancien et bien qu'il reste une bonne façon de comprendre les promesses en JavaScript, le projet réalisé ne doit pas être utilisé car de nos jours les promesses sont présentes nativement dans tous les environnements exécutant du JavaScript."}]]}],["$","hr",null,{"className":"hr_root__iMEe9"}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Dans le petit monde de JavaScript les promises font l'actualité. Je vous propose de comprendre les promises par l'implémentation."}]]}],["$","h2",null,{"className":"h2_root__Y02lX","children":["$","span",null,{"className":"anchored_root__HWi6K","children":[[["$","span","0",{"children":"Qu'est-ce qu'une promise ?"}]]," ",["$","small",null,{"children":["$","$L11",null,{"href":"#qu-est-ce-qu-une-promise","className":"anchored_icon__N5Sem","id":"qu-est-ce-qu-une-promise","title":"Lien vers cette section","children":["$","span",null,{"children":"🔗"}]}]}]]}]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Selon le "}],["$","$L11",null,{"href":"http://wiki.commonjs.org/wiki/Promises/A","className":"a_root__WEPS7","title":"Voir la spécification en cours","target":"_blank","children":[null,[["$","span","0",{"children":"Wiki CommonJS"}]]]}],["$","span","2",{"children":", une promise, en JavaScript, est un objet représentant une valeur qui pourrait être retournée par l'exécution d'une opération unique (souvent asynchrone). Elle peut donc avoir trois états ; en attente de résultat, complétée avec succès ou en échec. Une fois complétée ou en échec, une promise ne peut plus changer d'état."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Afin de pouvoir être informé de la complétion, de l'échec ou de la progression de l'exécution de l'opération associée, les objets de type promise ont une propriété "}],["$","code",null,{"className":"code_root__5JLV_","children":"then"}],["$","span","2",{"children":" dont la valeur est une fonction prenant en argument trois fonctions de callback :"}]]}],["$","div",null,{"className":"gist_root__FwqUp","children":[["$","iframe",null,{"src":"data:text/html;base64,PHNjcmlwdCBzcmM9Imh0dHBzOi8vZ2lzdC5naXRodWIuY29tL25mcm9pZHVyZS80YmJhN2IxNmE1YjVhZTJjOGFmZC5qcyI+PC9zY3JpcHQ+"}],["$","noscript",null,{"children":["$","div",null,{"className":"code_root__5JLV_","children":["$","code",null,{"children":["$","pre",null,{"children":"// From the Gist: https://gist.github.com/nfroidure/4bba7b16a5b5ae2c8afd\npromise.prototype.then = function (\n  callbackSuccess,\n  callbackError,\n  callbackProgress,\n) {\n  // my promise logic\n  // calling callbacks depending on it's state\n};"}]}]}]}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Le premier callback sera appelé en cas de réalisation avec succès de l'opération, le second en cas d'échec et le troisième pour indiquer une éventuelle progression de cette opération. Ces trois fonctions de retour sont optionnelles."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"La méthode then doit retourner un autre objet promise qui sera complété dès lors que la fonction de retour de succès ou d'échec de la promise initiale aura été complètement exécutée. On peut considérer cette nouvelle promise comme un objet représentant l'opération réalisée par les fonctions de retour."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"La fonction "}],["$","code",null,{"className":"code_root__5JLV_","children":"callbackSuccess"}],["$","span","2",{"children":" peut retourner une valeur qui sera alors associée à la promise retournée par la méthode "}],["$","code",null,{"className":"code_root__5JLV_","children":"then"}],["$","span","4",{"children":" :"}]]}],["$","div",null,{"className":"gist_root__FwqUp","children":[["$","iframe",null,{"src":"data:text/html;base64,PHNjcmlwdCBzcmM9Imh0dHBzOi8vZ2lzdC5naXRodWIuY29tL25mcm9pZHVyZS84NjUyNDk5MDRkNjQ5Njk4MmEzMy5qcyI+PC9zY3JpcHQ+"}],["$","noscript",null,{"children":["$","div",null,{"className":"code_root__5JLV_","children":["$","code",null,{"children":["$","pre",null,{"children":"// From the Gist: https://gist.github.com/nfroidure/865249904d6496982a33\n\nvar p = new Promise(function myPromiseLogic(success, error, progress) {\n  success(1);\n})\n  .then(function (value) {\n    return value + 1;\n  })\n  .then(function (value) {\n    console.log(value);\n  });\n// 2"}]}]}]}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Ici, on crée une promise avec l'opérateur "}],["$","code",null,{"className":"code_root__5JLV_","children":"new"}],["$","span","2",{"children":" qui se résous immédiatement avec la valeur 1. Dans le premier "}],["$","code",null,{"className":"code_root__5JLV_","children":"then"}],["$","span","4",{"children":", on incrémente la valeur puis on la retourne, dans le troisième "}],["$","code",null,{"className":"code_root__5JLV_","children":"then"}],["$","span","6",{"children":", on l'affiche."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"La fonction de retour, ici "}],["$","code",null,{"className":"code_root__5JLV_","children":"callbackSuccess"}],["$","span","2",{"children":", peut aussi retourner une promise. Dans ce cas, cette dernière se substitue en quelque sorte à la promise générée par la méthode "}],["$","code",null,{"className":"code_root__5JLV_","children":"then"}],["$","span","4",{"children":". En effet, puisque la fonction de callback retourne une promise, elle est donc asynchrone, on peut donc considérer que l'exécution complète du callback ne sera vraie que lorsque la promise retournée sera complétée. Le code ci-dessus peut donc également être écrit ainsi :"}]]}],["$","div",null,{"className":"gist_root__FwqUp","children":[["$","iframe",null,{"src":"data:text/html;base64,PHNjcmlwdCBzcmM9Imh0dHBzOi8vZ2lzdC5naXRodWIuY29tL25mcm9pZHVyZS9kMmJkZTAwODhlNmQwYmViODJmZi5qcyI+PC9zY3JpcHQ+"}],["$","noscript",null,{"children":["$","div",null,{"className":"code_root__5JLV_","children":["$","code",null,{"children":["$","pre",null,{"children":"// From the Gist: https://gist.github.com/nfroidure/d2bde0088e6d0beb82ff\n\nvar p = new Promise(function myPromiseLogic(success, error, progress) {\n  success(1);\n})\n  .then(function (value) {\n    return new Promise(function myPromiseLogic(success, error, progress) {\n      success(value + 1);\n    });\n  })\n  .then(function (value) {\n    console.log(value);\n  });\n// output : 2"}]}]}]}]]}],["$","h2",null,{"className":"h2_root__Y02lX","children":["$","span",null,{"className":"anchored_root__HWi6K","children":[[["$","span","0",{"children":"Implémentation"}]]," ",["$","small",null,{"children":["$","$L11",null,{"href":"#implementation","className":"anchored_icon__N5Sem","id":"implementation","title":"Lien vers cette section","children":["$","span",null,{"children":"🔗"}]}]}]]}]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Si comme moi vous aimez voir ce qu'il se passe sous le capot pour mieux comprendre, je vous propose une petite "}],["$","$L11",null,{"href":"https://gist.github.com/nfroidure/5697689","className":"a_root__WEPS7","title":"Voir le gist de cette implémentation","target":"_blank","children":[null,[["$","span","0",{"children":"implémentation"}]]]}],["$","span","2",{"children":" que je vais vous expliquer pas à pas. Tout d'abord, on implémente le constructeur. Ce dernier a pour responsabilité le fait de prendre en argument la fonction représentant la \"logique\" de notre promise. Le but est de préparer des fonctions permettant à cette logique de signaler le succès, l'échec ou la progression de la tâche qu'elle exécute :"}]]}],["$","div",null,{"className":"gist_root__FwqUp","children":[["$","iframe",null,{"src":"data:text/html;base64,PHNjcmlwdCBzcmM9Imh0dHBzOi8vZ2lzdC5naXRodWIuY29tL25mcm9pZHVyZS9hZGM2YWU2YmZlMTgzZWYzNDU3Zi5qcyI+PC9zY3JpcHQ+"}],["$","noscript",null,{"children":["$","div",null,{"className":"code_root__5JLV_","children":["$","code",null,{"children":["$","pre",null,{"children":"// From the Gist: https://gist.github.com/nfroidure/adc6ae6bfe183ef3457f\n\nfunction Promise(logic) {\n  // create callbacks\n  // executes the logic by passing callbacks\n  logic(success, fail, progress);\n}"}]}]}]}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Comme vous pouvez "}],["$","$L11",null,{"href":"https://gist.github.com/nfroidure/5697689#file-promise-js-L12","className":"a_root__WEPS7","title":"Voir la ligne 12","target":"_blank","children":[null,[["$","span","0",{"children":"le voir ligne 12"}]]]}],["$","span","2",{"children":", les fonctions de callback générées dans le constructeur modifient le statut de la promise en fonction de la réussite ou l'échec, mais aussi, tentent d'exécuter une fonction de callback qui pour le moment, n'existe pas. Il s'agit de la fonction de callback qui sera injectée par la méthode "}],["$","code",null,{"className":"code_root__5JLV_","children":"then"}],["$","span","4",{"children":"."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"La méthode then a deux responsabilités, permettre l'exécution des callbacks qu'elle prend en argument et générer une nouvelle promise subordonnée à la première qu'elle fournira en retour."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"La promise nouvellement créée a une logique particulière. En effet, la "}],["$","$L11",null,{"href":"https://gist.github.com/nfroidure/5697689#file-promise-js-L33","className":"a_root__WEPS7","title":"Voir la ligne en question","target":"_blank","children":[null,[["$","span","0",{"children":"fonction fournie au constructeur"}]]]}],["$","span","2",{"children":" est vide est ne sert qu'à récupérer une référence vers les fonctions de callback que le constructeur va lui fournir. Cette astuce va nous permettre de lier la complétion de notre nouvelle promise à la promise originale."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"L'exécution des callback fournis à la méthode then est enrobée de manière à compléter la nouvelle promise en conséquence. Il existe deux possibilités. Soit au moment de l'exécution de "}],["$","code",null,{"className":"code_root__5JLV_","children":"then"}],["$","span","2",{"children":", la promise est déjà complétée et à ce moment, on exécute tout de suite "}],["$","$L11",null,{"href":"https://gist.github.com/nfroidure/5697689#file-promise-js-L56","className":"a_root__WEPS7","title":"Voir la ligne concernée","target":"_blank","children":[null,[["$","span","0",{"children":"les callbacks"}]]]}],["$","span","4",{"children":" adéquats, soit elle n'a pas encore eu lieu et dans ce cas, on "}],["$","$L11",null,{"href":"https://gist.github.com/nfroidure/5697689#file-promise-js-L52","className":"a_root__WEPS7","title":"Voir la ligne où ils sont attachés","target":"_blank","children":[null,[["$","span","0",{"children":"attache ces callbacks à la promise"}]]]}],["$","span","6",{"children":" pour qu'ils soient exécutés quand la logique appellera une des fonctions de callback passées par le contructeur."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Vous remarquerez l'"}],["$","$L11",null,{"href":"https://gist.github.com/nfroidure/5697689#file-promise-js-L57","className":"a_root__WEPS7","title":"Voir la ligne où l'exécution a lieu","target":"_blank","children":[null,[["$","span","0",{"children":"utilisation de setTimeout"}]]]}],["$","span","2",{"children":" pour exécuter les callbacks de manière asynchrone. Ce n'est pas précisé par le brouillon de la spécification, mais je pense que c'est une bonne pratique, de cette manière toute résolution de promise est asynchrone."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Nous allons voir comment utiliser les promises pour en tirer le meilleur parti, mais avant tout, je vous recommande de jeter un œil à l'implémentation des méthodes statiques "}],["$","$L11",null,{"href":"https://gist.github.com/nfroidure/5697689#file-promise-js-L64","className":"a_root__WEPS7","title":"Voir l'implémentation de Promise.all","target":"_blank","children":[null,[["$","span","0",{"children":"Promise.all"}]]]}],["$","span","2",{"children":" et "}],["$","$L11",null,{"href":"https://gist.github.com/nfroidure/5697689#file-promise-js-L94","className":"a_root__WEPS7","title":"Voir l'implémentation de Promise.any","target":"_blank","children":[null,[["$","span","0",{"children":"Promise.any"}]]]}],["$","span","4",{"children":" que nous allons bientôt utiliser."}]]}],["$","h2",null,{"className":"h2_root__Y02lX","children":["$","span",null,{"className":"anchored_root__HWi6K","children":[[["$","span","0",{"children":"Le paradigme des promises"}]]," ",["$","small",null,{"children":["$","$L11",null,{"href":"#le-paradigme-des-promises","className":"anchored_icon__N5Sem","id":"le-paradigme-des-promises","title":"Lien vers cette section","children":["$","span",null,{"children":"🔗"}]}]}]]}]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Ok, on sait ce que sont les promises et comment fonctionne leur implémentation. Mais qu'est-ce qu'on peut bien faire avec ? Les promises sont vendues comme LA solution au JavaScript callback hell. Je trouve cette présentation un peu réductrice."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Ceux qui utilisent MooTools savent bien qu'on peut très facilement se sortir du callback hell en ayant une approche orientée objet à coup de binding de fonctions et ceux qui connaissent les streams sous Node savent également qu'on peut aisément linéariser son code en les utilisant."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"D'ailleurs, les streams relèvent du même concept que les promises, il sont une \"promesse\" que des données vont arriver ou seront envoyées indépendamment de l'arrivée effective synchrone ou non de celles-cis. En réalité, seule l'API diffère entre les streams et les promises dans NodeJS."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Bref, les promises sont surtout une nouveau paradigme de programmation. Elles permettent d'envisager une application comme une sorte d'arbre logique de promises. Nous allons prendre un exemple simple, le cas d'une application avec un menu principal qui charge des vues différentes en fonction du bouton cliqué sur le menu. Nous allons devoir créer des promises d'évènements. Pour nous simplifier la tâche, j'ai créé un "}],["$","$L11",null,{"href":"https://gist.github.com/nfroidure/5697689#file-promise-js-L151","className":"a_root__WEPS7","title":"Voir la fonction en question","target":"_blank","children":[null,[["$","span","0",{"children":"générateur de promises"}]]]}],["$","span","2",{"children":" basé sur les écouteurs d'évènements."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Commençons par le menu. Un menu est un promesse d'un clic sur un des boutons qui le composent. Nous utilisons donc la méthode "}],["$","code",null,{"className":"code_root__5JLV_","children":"Promise.any"}],["$","span","2",{"children":" qui permet de créer une promise qui sera complétée si l'une des promises reçues en argument est complétée avec succès :"}]]}],["$","div",null,{"className":"gist_root__FwqUp","children":[["$","iframe",null,{"src":"data:text/html;base64,PHNjcmlwdCBzcmM9Imh0dHBzOi8vZ2lzdC5naXRodWIuY29tL25mcm9pZHVyZS8wMGNkYTZmMzA2OTE5ZWQ5ZDE3Mi5qcyI+PC9zY3JpcHQ+"}],["$","noscript",null,{"children":["$","div",null,{"className":"code_root__5JLV_","children":["$","code",null,{"children":["$","pre",null,{"children":"// From the Gist: https://gist.github.com/nfroidure/00cda6f306919ed9d172\n\nfunction menu() {\n  // showing the menu\n  Promise.any(\n    getEventPromise(\"click\", document.getElementById(\"view2button\")),\n    getEventPromise(\"click\", document.getElementById(\"view3button\")),\n  )\n    .then(function (event) {\n      // view actions\n      // here goes view code\n      // return a promise of exit\n      return getEventPromise(\n        \"click\",\n        document.getElementById(viewId + \"backbutton\"),\n      ).then(function () {\n        // hide the view\n      });\n    })\n    // executing the menu\n    .then(menu);\n}\n\n// First execution\nmenu();"}]}]}]}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"C'est simple comme bonjour. On a une promesse de clic, suivie de l'affichage de la vue et d'une promesse de sortie de la vue. Enfin, quand la sortie est effective, on recommence à prendre en compte les clics sur l'un des items de menu."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"J'ai créé "}],["$","$L11",null,{"href":"http://codepen.io/seraphzz/pen/oHdJD","className":"a_root__WEPS7","title":"Voir le concept sur Codepen.io","target":"_blank","children":[null,[["$","span","0",{"children":"un exemple sur Codepen"}]]]}],["$","span","2",{"children":" rapidement qui illustre le concept. Le bouton générant une fenêtre modale avec "}],["$","code",null,{"className":"code_root__5JLV_","children":"alert"}],["$","span","4",{"children":" recrée une nouvelle promise pour pouvoir générer d'autres alertes alors que le bouton basé sur "}],["$","code",null,{"className":"code_root__5JLV_","children":"prompt"}],["$","span","6",{"children":" de la vue suivante n'en recrée pas et n'est donc utilisable qu'une seule fois."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"L'avantage de re-créer une promise quand elle est réalisée est qu'on peut placer des évènements asynchrones entre deux ce qui fait que le bouton n'est pas actif tant que la promise associée n'est pas entièrement réalisée."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"En revanche, je me suis permis un écart avec la version originale des promises. En effet, la méthode Promise.any n'attend la réalisation que d'une des promises. Cela pose un problème évident de fuite de mémoire si l'on ne désenregistre pas les évènements associés aux promises qui ne seront pas réalisées."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Pour ce faire, j'ai créé une méthode dispose pour les promises qui permet de stocker en retour de la "}],["$","$L11",null,{"href":"https://gist.github.com/nfroidure/5697689#file-promise-js-L28","className":"a_root__WEPS7","title":"Voir la ligne concernée","target":"_blank","children":[null,[["$","span","0",{"children":"fonction de logique de la promise dans le constructeur Promise"}]]]}],["$","span","2",{"children":" une fonction qui permette d'annuler la promise. Par exemple, pour le générateur de promise, la fonction dispose "}],["$","$L11",null,{"href":"https://gist.github.com/nfroidure/5697689#file-promise-js-L161","className":"a_root__WEPS7","title":"Voir la ligne","target":"_blank","children":[null,[["$","span","0",{"children":"supprime l'écouteur d'évènement"}]]]}],["$","span","4",{"children":". Pour une requête XHR, on pourrait aussi annuler cette dernière."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"De cette façon, dans la méthode "}],["$","code",null,{"className":"code_root__5JLV_","children":"Promise.any"}],["$","span","2",{"children":", on "}],["$","$L11",null,{"href":"https://gist.github.com/nfroidure/5697689#file-promise-js-L101","className":"a_root__WEPS7","title":"Voir la ligne de cette annulation","target":"_blank","children":[null,[["$","span","0",{"children":"désamorce toutes les promises"}]]]}],["$","span","4",{"children":" qui n'on pas pu être complétée avant la réalisation de la première promise avec succès."}]]}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Pour info : j'ai finalement créé un "}],["$","$L11",null,{"href":"https://github.com/nfroidure/Promise","className":"a_root__WEPS7","title":"Voir le dépôt","target":"_blank","children":[null,[["$","span","0",{"children":"dépôt GitHub"}]]]}],["$","span","2",{"children":" de l'implémentation de cet article et j'ai commencé un "}],["$","$L11",null,{"href":"https://github.com/nfroidure/Liar","className":"a_root__WEPS7","title":"Voir le dépôt","target":"_blank","children":[null,[["$","span","0",{"children":"petit jeu nommé Liar"}]]]}],["$","span","4",{"children":" qui utilise ces promises afin d'illustrer cet article."}]]}]],["$","p",null,{"className":"p_root__SHE_W","children":["Published at"," ","samedi 8 juin 2013 à 12:04:17","."]}]]}],["$","section",null,{"className":"contentBlock_root__802UK","children":["$","aside",null,{"className":"share_root__Qm_RR","children":[["$","h2",null,{"className":"h2_root__Y02lX","children":"Commenter et partager"}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","$L11",null,{"href":"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Finsertafter.com%2Fblog%2Fpromises_javascript_ouvrons_capot","className":"a_root__WEPS7","title":"Commenter sur Facebook","target":"_blank","children":[null,[["$","span",null,{"className":"share_icon__bi4Q3 share_facebook__JKn8d"}],"Facebook"]]}]," - ",["$","$L11",null,{"href":"https://twitter.com/intent/tweet/?url=https%3A%2F%2Finsertafter.com%2Fblog%2Fpromises_javascript_ouvrons_capot&text=Les%20promises%20avec%20JavaScript%C2%A0%3A%20ouvrons%20le%20capot%C2%A0!&via=nfroidure","className":"a_root__WEPS7","title":"Commenter sur Twitter","target":"_blank","children":[null,[["$","span",null,{"className":"share_icon__bi4Q3 "}],"Twitter"]]}]," - ",["$","$L11",null,{"href":"mailto:nicolas.froidure@gmail.com","className":"a_root__WEPS7","title":"Me répondre par mail","target":"_self","children":[null,[["$","span",null,{"className":"share_icon__bi4Q3 share_mail__yvBDK"}],"Courriel"]]}]]}]]}]}],["$","section",null,{"className":"contentBlock_root__802UK","children":["$","aside",null,{"className":"page_linkedEntries__jiPuT","children":[["$","h2",null,{"className":"h2_root__Y02lX","children":"Articles similaires"}],["$","p",null,{"className":"p_root__SHE_W","children":["Dans les catégories"," ","JavaScript et Promises","."]}],["$","div",null,{"className":"items_entries__5hkLG","children":[["$","div","creer_bot_irc_avec_nodejs",{"className":"items_entry_item__GWeg7","children":[null,["$","h2",null,{"className":"h2_root__Y02lX items_entry_title__vJ_8h","children":["$","$L11",null,{"href":".//creer_bot_irc_avec_nodejs","className":"a_root__WEPS7 items_entry_link__EtVod","title":"Lire cet article de blog","target":"_self","children":[null,"Créer un bot IRC avec NodeJS"]}]}],["$","p",null,{"className":"p_root__SHE_W items_entry_description__ZWt9y","children":["J'ai récemment pu tester la création d'un bot NodeJS grâce à la mise en place de Marionnette, le bot IRC de FranceJS."," ",["$","br",null,{}],["$","$L11",null,{"href":".//creer_bot_irc_avec_nodejs","className":"a_root__WEPS7","title":"Lire cet article de blog","target":"_self","children":[null,"Lire la suite"]}]]}],["$","p",null,{"className":"p_root__SHE_W items_entry_time__iNrot","children":["Published at"," ","dimanche 5 mai 2013 à 10:04:57","."]}],["$","div",null,{"className":"items_clear__3fyGk"}]]}],["$","div","capskiller_stop_aux_majuscules",{"className":"items_entry_item__GWeg7","children":[null,["$","h2",null,{"className":"h2_root__Y02lX items_entry_title__vJ_8h","children":["$","$L11",null,{"href":".//capskiller_stop_aux_majuscules","className":"a_root__WEPS7 items_entry_link__EtVod","title":"Lire cet article de blog","target":"_self","children":[null,"CapsKiller : Stop aux majuscules"]}]}],["$","p",null,{"className":"p_root__SHE_W items_entry_description__ZWt9y","children":["Les digital natives supportent mal les majuscules dans les courriels. En effet, cela est assimilé à des cris. Malheureusement, tout le monde n'en fait pas grand cas. CapsKiller pour Thunderbird est là pour vous en protéger."," ",["$","br",null,{}],["$","$L11",null,{"href":".//capskiller_stop_aux_majuscules","className":"a_root__WEPS7","title":"Lire cet article de blog","target":"_self","children":[null,"Lire la suite"]}]]}],["$","p",null,{"className":"p_root__SHE_W items_entry_time__iNrot","children":["Published at"," ","samedi 23 février 2013 à 12:05:23","."]}],["$","div",null,{"className":"items_clear__3fyGk"}]]}],["$","div","application_desktop_avec_chrome",{"className":"items_entry_item__GWeg7","children":[null,["$","h2",null,{"className":"h2_root__Y02lX items_entry_title__vJ_8h","children":["$","$L11",null,{"href":".//application_desktop_avec_chrome","className":"a_root__WEPS7 items_entry_link__EtVod","title":"Lire cet article de blog","target":"_self","children":[null,"Une application desktop avec Chrome"]}]}],["$","p",null,{"className":"p_root__SHE_W items_entry_description__ZWt9y","children":["Bien que HTML5 progresse de jour en jour, on aimerait parfois pouvoir accéder à n'importe quoi dans son navigateur. C'est déjà possible, grâce à un nouveau petit projet NodeJS."," ",["$","br",null,{}],["$","$L11",null,{"href":".//application_desktop_avec_chrome","className":"a_root__WEPS7","title":"Lire cet article de blog","target":"_self","children":[null,"Lire la suite"]}]]}],["$","p",null,{"className":"p_root__SHE_W items_entry_time__iNrot","children":["Published at"," ","vendredi 8 février 2013 à 16:54:30","."]}],["$","div",null,{"className":"items_clear__3fyGk"}]]}]]}]]}]}]]
c:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"name":"theme-color","content":"#3e78b2"}],["$","meta","2",{"charSet":"utf-8"}],["$","title","3",{"children":"Les promises avec JavaScript : ouvrons le capot ! - Nicolas Froidure"}],["$","meta","4",{"name":"description","content":"Dans le petit monde de JavaScript les promises font l'actualité. Je vous propose de comprendre les promises par l'implémentation."}],["$","link","5",{"rel":"author","href":"https://insertafter.com"}],["$","meta","6",{"name":"author","content":"Nicolas Froidure"}],["$","meta","7",{"name":"robots","content":"index, follow"}],["$","link","8",{"rel":"canonical","href":"https://insertafter.com/fr/blog/promises_javascript_ouvrons_capot"}],["$","meta","9",{"property":"og:title","content":"Les promises avec JavaScript : ouvrons le capot ! - Nicolas Froidure"}],["$","meta","10",{"property":"og:description","content":"Dans le petit monde de JavaScript les promises font l'actualité. Je vous propose de comprendre les promises par l'implémentation."}],["$","meta","11",{"property":"og:url","content":"https://insertafter.com/fr/blog/promises_javascript_ouvrons_capot"}],["$","meta","12",{"property":"og:site_name","content":"Nicolas Froidure"}],["$","meta","13",{"property":"og:locale","content":"fr_FR"}],["$","meta","14",{"property":"og:image:alt","content":"Bannière du site"}],["$","meta","15",{"property":"og:image","content":"https://insertafter.com/images/banner.png"}],["$","meta","16",{"property":"og:type","content":"article"}],["$","meta","17",{"name":"twitter:card","content":"summary"}],["$","meta","18",{"name":"twitter:site","content":"@nfroidure"}],["$","meta","19",{"name":"twitter:creator","content":"@nfroidure"}],["$","meta","20",{"name":"twitter:title","content":"Les promises avec JavaScript : ouvrons le capot ! - Nicolas Froidure"}],["$","meta","21",{"name":"twitter:description","content":"Dans le petit monde de JavaScript les promises font l'actualité. Je vous propose de comprendre les promises par l'implémentation."}],["$","meta","22",{"name":"twitter:image:alt","content":"Bannière du site"}],["$","meta","23",{"name":"twitter:image","content":"https://insertafter.com/images/banner.png"}],["$","link","24",{"rel":"icon","href":"/images/favicon.svg","type":"image/svg+xml","sizes":"any"}],["$","link","25",{"rel":"icon","href":"/images/favicon-16.png","type":"image/png","sizes":"16x16"}],["$","link","26",{"rel":"icon","href":"/images/favicon-128.png","type":"image/png","sizes":"128x128"}]]
1:null
