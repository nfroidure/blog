1:"$Sreact.fragment"
2:I[7555,[],""]
3:I[1295,[],""]
6:I[9665,[],"OutletBoundary"]
9:I[9665,[],"ViewportBoundary"]
b:I[9665,[],"MetadataBoundary"]
d:I[6614,[],""]
:HL["https://insertafter.com/_next/static/css/82572465af7cf95c.css","style"]
:HL["https://insertafter.com/_next/static/css/9a850f764b370999.css","style"]
:HL["https://insertafter.com/_next/static/css/2b26a2222cb58ac3.css","style"]
0:{"P":null,"b":"DAkb_7D-Elg46Gs6CsWRY","p":"https://insertafter.com","c":["","fr","blog","design_base_donnee_mongodb"],"i":false,"f":[[["",{"children":["(withLocale)",{"children":[["locale","fr","d"],{"children":["blog",{"children":[["id","design_base_donnee_mongodb","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true]}]}],["",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["(withLocale)",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$0:f:0:1:1:props:children:1:props:notFound:0:1:props:style","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$0:f:0:1:1:props:children:1:props:notFound:0:1:props:children:props:children:1:props:style","children":404}],["$","div",null,{"style":"$0:f:0:1:1:props:children:1:props:notFound:0:1:props:children:props:children:2:props:style","children":["$","h2",null,{"style":"$0:f:0:1:1:props:children:1:props:notFound:0:1:props:children:props:children:2:props:children:props:style","children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["locale","fr","d"],["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"https://insertafter.com/_next/static/css/82572465af7cf95c.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],"$L4"]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["id","design_base_donnee_mongodb","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5","$undefined",[["$","link","0",{"rel":"stylesheet","href":"https://insertafter.com/_next/static/css/9a850f764b370999.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"https://insertafter.com/_next/static/css/2b26a2222cb58ac3.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L6",null,{"children":["$L7","$L8",null]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","NE0JgiEZVPiADwqCvUJih",{"children":[["$","$L9",null,{"children":"$La"}],null]}],["$","$Lb",null,{"children":"$Lc"}]]}],false]],"m":"$undefined","G":["$d","$undefined"],"s":false,"S":true}
e:"$Sreact.strict_mode"
f:I[8873,["874","static/chunks/874-f855e4232fadb1a1.js","875","static/chunks/app/(withRedirects)/%5Blocale%5D/layout-b1f0ddb92ec3d214.js"],"default"]
10:I[2489,["874","static/chunks/874-f855e4232fadb1a1.js","875","static/chunks/app/(withRedirects)/%5Blocale%5D/layout-b1f0ddb92ec3d214.js"],"default"]
4:["$","$e",null,{"children":["$","html",null,{"lang":"fr","children":["$","body",null,{"className":"layout_body__jFZuu","children":[null,["$","header",null,{"className":"header_iaHeader__4vCMA","children":["$","div",null,{"className":"$undefined","children":["$","h1",null,{"children":["$","a",null,{"href":"/fr","title":"Retour à l’accueil","className":"header_iaHeaderLogo__0uNr1","children":["$","img",null,{"src":"/images/logo.svg","alt":"Logo d’InsertAfter"}]}]}]}]}],["$","$Lf",null,{"locale":"fr","dictionary":{"home":{"label":"Accueil","title":"Retour à l’accueil"},"blog":{"label":"Blog","title":"Retour à l’index du blog"},"projects":{"label":"Projets","title":"Découvrir mes divers projets"},"about":{"label":"À propos","title":"En savoir plus à mon sujet"}}}],["$","$L10",null,{"locale":"fr"}],["$","main",null,{"className":"layout_iaMain__6s2gl","children":["$","div",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$L11",[["$","link","0",{"rel":"stylesheet","href":"https://insertafter.com/_next/static/css/9a850f764b370999.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}],["$","aside",null,{"className":"social_iaSocial__kdR1x","children":["$","nav",null,{"children":["$","ul",null,{"children":[["$","li",null,{"children":["$","a",null,{"href":"https://mastodon.social/@nfroidure","rel":"me","title":"Me suivre sur Mastodon","className":"social_iaSocialMastodon__MTF6o","children":["$","span",null,{"children":"Mastodon"}]}]}],["$","li",null,{"children":["$","a",null,{"href":"https://bsky.app/profile/nfroidure.bsky.social","rel":"me","title":"Me suivre sur Bluesky","className":"social_iaSocialBluesky__fKW6M","children":["$","span",null,{"children":"Bluesky"}]}]}],["$","li",null,{"children":["$","a",null,{"href":"https://github.com/nfroidure","title":"Voir mes projets sur GitHub","className":"social_iaSocialGithub__vcU5_","children":["$","span",null,{"children":"GitHub"}]}]}],["$","li",null,{"children":["$","a",null,{"href":"https://www.npmjs.org/~nfroidure","title":"Voir mon compte NPM","className":"social_iaSocialNpm__6nku5","children":["$","span",null,{"children":"NPM"}]}]}],["$","li",null,{"children":["$","a",null,{"href":"https://www.linkedin.com/in/nfroidure/","rel":"me","title":"Voir mon profil LinkedIn","className":"social_iaSocialLinkedin__pWACO","children":["$","span",null,{"children":"LinkedIn"}]}]}],["$","li",null,{"children":["$","a",null,{"href":"https://facebook.com/nicolas.froidure.douai","rel":"me","title":"Me suivre sur Facebook","className":"social_iaSocialFacebook__w4wfH","children":["$","span",null,{"children":"Facebook"}]}]}],["$","li",null,{"children":["$","a",null,{"href":"/fr/blog/index.atom","title":"S’abonner au flux RSS","className":"social_iaSocialFeed__gEQQ0","children":["$","span",null,{"children":"Flux RSS"}]}]}]]}]}]}],["$","footer",null,{"className":"footer_iaFooter__rhlnQ","children":["$","p",null,{"className":"footer_iaFooterContent__VZndF","children":["© Nicolas Froidure 2012-",2025]}]}]]}]}]}]
11:["$","section",null,{"className":"contentBlock_root__802UK","children":[["$","h1",null,{"className":"h1_root__VPXQG","children":"Page not found"}],["$","p",null,{"className":"not-found_p__fvcGn","children":[["$","img",null,{"className":"not-found_img__IT2jY","src":"https://media.giphy.com/media/12mPcp41D9a1i0/giphy.gif","alt":"404.png"}],["$","p",null,{"className":"p_root__SHE_W","children":"It seems that the page you look for doesn't exist."}]]}]]}]
a:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","2",{"name":"theme-color","content":"#3e78b2"}]]
7:null
12:I[6874,["874","static/chunks/874-f855e4232fadb1a1.js","96","static/chunks/96-3883dbab65ddc99f.js","852","static/chunks/app/(withLocale)/%5Blocale%5D/blog/%5Bid%5D/page-a26bd7e9ac7bd843.js"],""]
5:[["$","section",null,{"className":"contentBlock_root__802UK","children":[[["$","h1","0",{"className":"h1_root__VPXQG","children":[["$","span","0",{"children":"Design de bases de données MongoDB"}]]}],["$","p","1",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Comme nous l'avons vu précédemment, la conception de bases de données avec MongoDB est "}],["$","$L12","1",{"href":"./retour_xp_mongodb","className":"a_root__WEPS7","title":null,"target":"_self","children":[null,[["$","span","0",{"children":"bien différente"}]]]}],["$","span","2",{"children":" de la conception avec les bases de données relationnelles."}]]}],["$","p","2",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Dans cet article, je vous propose d'aller un peu plus loin dans les techniques de conception de schéma avec MongoDB. Voici quelques conseils et patterns que j'ai eu à utiliser pour le backend de l'application SaaS que nous développons chez SimpliField."}]]}],["$","h2","3",{"className":"h2_root__Y02lX","children":["$","span",null,{"className":"anchored_root__HWi6K","children":[[["$","span","0",{"children":"Collection != Modèle != Ressource"}]]," ",["$","small",null,{"children":["$","$L12",null,{"href":"#collection-modele-ressource","className":"anchored_icon__N5Sem","id":"collection-modele-ressource","title":"Lien vers cette section","children":["$","span",null,{"children":"🔗"}]}]}]]}]}],["$","p","4",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Les documents MongoDB sont stockés dans des collections. Cette appellation n'est pas innocente. Il faut voir une collection comme un amas de documents pas forcément uniformes et sans aucune corrélation avec les concepts que vous manipulez dans vos applications."}]]}],["$","p","5",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Ainsi, il ne faut pas chercher à associer les ressources de votre API REST aux collection MongoDB. Prenons, par exemple, la structure de document suivante :"}]]}],["$","div","6",{"className":"code_root__5JLV_","children":["$","code",null,{"children":["$","pre",null,{"children":"{\n  _id: ObjectId,\n  user: {\n    email: String,\n    name: String\n  },\n  auth: {\n    password: String\n  },\n  preferences: [{\n    name: String,\n    value: String|Boolean|Number\n  }],\n  tags: [{\n    name: String,\n    value: String\n  }],\n  locations_ids: [ObjectId],\n  coworkers_ids: [ObjectId],\n  updates: [{\n    when: Date,\n    by: ObjectId,\n    ip: String\n  }]\n}"}]}]}],["$","p","7",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Pour une telle structure, on pourra trouver des points d'API de ce type :"}]]}],["$","ul","8",{"className":"ul_ul__qh0e9","children":[["$","li","0",{"className":"li_root__oY9Dv","children":[["$","p","0",{"className":"p_root__SHE_W","children":[["$","code","0",{"className":"code_root__5JLV_","children":"GET /users"}],["$","span","1",{"children":" - Pour obtenir la liste des utilisateurs ;"}]]}]]}],["$","li","1",{"className":"li_root__oY9Dv","children":[["$","p","0",{"className":"p_root__SHE_W","children":[["$","code","0",{"className":"code_root__5JLV_","children":"POST /users"}],["$","span","1",{"children":" - Pour ajouter un utilisateur ;"}]]}]]}],["$","li","2",{"className":"li_root__oY9Dv","children":[["$","p","0",{"className":"p_root__SHE_W","children":[["$","code","0",{"className":"code_root__5JLV_","children":"GET|PUT /users/:id"}],["$","span","1",{"children":" - Pour lire/écrire un utilisateur ;"}]]}]]}],["$","li","3",{"className":"li_root__oY9Dv","children":[["$","p","0",{"className":"p_root__SHE_W","children":[["$","code","0",{"className":"code_root__5JLV_","children":"GET|PUT /users/:id/preferences/:name"}],["$","span","1",{"children":" - Pour lire/écrire une préférence ;"}]]}]]}],["$","li","4",{"className":"li_root__oY9Dv","children":[["$","p","0",{"className":"p_root__SHE_W","children":[["$","code","0",{"className":"code_root__5JLV_","children":"GET|PUT /users/:id/tags"}],["$","span","1",{"children":" - Pour lire/écrire les tags associés ;"}]]}]]}],["$","li","5",{"className":"li_root__oY9Dv","children":[["$","p","0",{"className":"p_root__SHE_W","children":[["$","code","0",{"className":"code_root__5JLV_","children":"GET|PUT /users/:id/locations"}],["$","span","1",{"children":" - Pour lire/éditer les lieux de l'utilisateur ;"}]]}]]}],["$","li","6",{"className":"li_root__oY9Dv","children":[["$","p","0",{"className":"p_root__SHE_W","children":[["$","code","0",{"className":"code_root__5JLV_","children":"GET|PUT /users/:id/coworkers"}],["$","span","1",{"children":" - Pour lire/éditer les collèges de l'utilisateur ;"}]]}]]}]]}],["$","p","9",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"On voit donc clairement ici le découplage total entre collections et ressources. Ici, on a une collection qui \"contient\" plusieurs ressources, mais dans d'autres cas, on peut avoir une ressource dont le contenu est réparti entre plusieurs collections. Ce serait le cas d'une ressource permettant d'accéder aux tags associés à tous les concepts du système (lieux, utilisateurs, produits...)."}]]}],["$","h2","10",{"className":"h2_root__Y02lX","children":["$","span",null,{"className":"anchored_root__HWi6K","children":[[["$","span","0",{"children":"Pas d'ODM"}]]," ",["$","small",null,{"children":["$","$L12",null,{"href":"#pas-d-odm","className":"anchored_icon__N5Sem","id":"pas-d-odm","title":"Lien vers cette section","children":["$","span",null,{"children":"🔗"}]}]}]]}]}],["$","p","11",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Puisqu'il n'y a aucune corrélation entre modèles, ressources et collections, je vous déconseille fortement l'utilisation d'ODM du type Mongoose. Je ne suis clairement pas fan de ce type d'outils pour les bases de données relationnelles mais dans le cas de MongoDB, ceci est d'autant plus vrai."}]]}],["$","p","12",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Pour tout dire, je l'ai appris dans la douleur. Mongoose a retardé ma compréhension de la philosophie de MongoDB. Qu'on adhère ou non à cette dernière, si on utilise MongoDB comme une base de donnée relationnelle, alors, on a le pire des deux mondes (et de gros problèmes de performances)."}]]}],["$","p","13",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Si vous me demandez mon avis sur l'API du driver natif de MongoDB, je vous répondrai qu'il y a une bonne marge d'amélioration, mais cette dernière est encore le meilleur moyen de profiter de toutes les fonctionnalités qu'un ORM comme Mongoose vous cache."}]]}],["$","p","14",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Prenons l'exemple précédent, avec Mongoose, pour mettre à jour les lieux de l'utilisateur, vous feriez instinctivement ceci :"}]]}],["$","div","15",{"className":"code_root__5JLV_","children":["$","code",null,{"children":["$","pre",null,{"children":"// On s'assure que les ids donnés sont corrects\nLocationModel.find(\n  {\n    _id: {\n      $in: myNewLocationsIds,\n    },\n  },\n  function (err, locations) {\n    if (locations.length != myNewLocationsIds.length) {\n      throw new Error(\"Bad locations ids\");\n    }\n    // On met à jour l'utilisateur\n    UserModel.find(\n      {\n        _id: ObjectId(\"abbacacaabbacacaabbacaca\"),\n      },\n      function (err, user) {\n        user.locations_ids = myNewLocationsIds;\n        user.save();\n      },\n    );\n  },\n);"}]}]}],["$","p","16",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Sauf qu'ici, vous récupérez toutes les données des documents pour simplement modifier une propriété de celle-ci. Ce n'est pas très optimal et même contraire à l'esprit de MongoDB. Avec le driver natif, vous écririez simplement :"}]]}],["$","div","17",{"className":"code_root__5JLV_","children":["$","code",null,{"children":["$","pre",null,{"children":"// On s'assure que les ids donnés sont corrects\ndb.collection(\"location\").count(\n  {\n    _id: {\n      $in: myNewLocationsIds,\n    },\n  },\n  function (err, count) {\n    if (count != myNewLocationsIds.length) {\n      throw new Error(\"Bad locations ids\");\n    }\n    // On met à jour l'utilisateur\n    UserModel.update(\n      {\n        _id: ObjectId(\"abbacacaabbacacaabbacaca\"),\n      },\n      {\n        $set: {\n          locations_ids: myNewLocationsIds,\n        },\n      },\n      { multi: true },\n    );\n  },\n);"}]}]}],["$","p","18",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Certains argumenteront que Mongoose permet tout de même d'utiliser le driver natif, mais c'est moins visible et difficile de réexploiter la validation de Mongoose pour ces modifications en dehors de l'API Mongoose."}]]}],["$","p","19",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Si vous avez lu mon précédent article sur MongoDB, vous savez que la conception d'une base de donnée nécessite une réflexion au moment de l'implémentation et fonction des principes de MongoDB. Utiliser le driver natif vous garanti de ne pas y échapper."}]]}],["$","h2","20",{"className":"h2_root__Y02lX","children":["$","span",null,{"className":"anchored_root__HWi6K","children":[[["$","span","0",{"children":"Découpler données et logique"}]]," ",["$","small",null,{"children":["$","$L12",null,{"href":"#decoupler-donnees-et-logique","className":"anchored_icon__N5Sem","id":"decoupler-donnees-et-logique","title":"Lien vers cette section","children":["$","span",null,{"children":"🔗"}]}]}]]}]}],["$","p","21",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Surtout, une fois débarrassé de Mongoose, ne vous précipitez pas pour créer votre propre ODM. Il faut considérer le contenu de vos collections comme des données que vous filtrerez en entrée comme en sortie avec des fonctions pures."}]]}],["$","p","22",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"De cette façon, vous avez toute liberté pour utiliser vos fonctions de validation/transformation où bon vous semble, quand bon vous semble sans utiliser ces horribles choses que sont l'héritage et les mixins."}]]}],["$","h2","23",{"className":"h2_root__Y02lX","children":["$","span",null,{"className":"anchored_root__HWi6K","children":[[["$","span","0",{"children":"Documents != Représentations JSON"}]]," ",["$","small",null,{"children":["$","$L12",null,{"href":"#documents-representations-json","className":"anchored_icon__N5Sem","id":"documents-representations-json","title":"Lien vers cette section","children":["$","span",null,{"children":"🔗"}]}]}]]}]}],["$","p","24",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Une autre erreur à ne pas commettre est de penser que la structure des documents de votre collection doit être la même que celle des représentations JSON de votre API REST."}]]}],["$","p","25",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"En pratique, c'est souvent le contraire. Par exemple, dans la collection utilisateurs ci-dessus, on peut vouloir créer un point d'API qui expose l'utilisateur "}],["$","strong","1",{"className":"strong_root__kOzFq","children":[["$","span","0",{"children":"et"}]]}],["$","span","2",{"children":" ses préférences. On a donc une décorrélation entre la représentation d'un utilisateur au niveau de l'API REST et au niveau des documents de la collection MongoDB."}]]}],["$","h2","26",{"className":"h2_root__Y02lX","children":["$","span",null,{"className":"anchored_root__HWi6K","children":[[["$","span","0",{"children":"Rien à la racine des documents"}]]," ",["$","small",null,{"children":["$","$L12",null,{"href":"#rien-a-la-racine-des-documents","className":"anchored_icon__N5Sem","id":"rien-a-la-racine-des-documents","title":"Lien vers cette section","children":["$","span",null,{"children":"🔗"}]}]}]]}]}],["$","p","27",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Une autre bonne pratique est d'éviter de stocker des propriétés d'un même concept à la racine des documents d'une collection. Par exemple, vous pourriez vous demander pourquoi j'ai créé une propriété "}],["$","code","1",{"className":"code_root__5JLV_","children":"user"}],["$","span","2",{"children":" dans laquelle j'ai mis les informations concernant l'utilisateur plutôt que de simplement mettre ces propriétés à la racine."}]]}],["$","p","28",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"La raison à cela est simple. Si un consommateur de l'API fait une requête "}],["$","code","1",{"className":"code_root__5JLV_","children":"PUT"}],["$","span","2",{"children":" vers le point d'API "}],["$","code","3",{"className":"code_root__5JLV_","children":"/users/:id"}],["$","span","4",{"children":", alors, je vais modifier toutes les informations concernant l'utilisateur. Il sera bien plus simple de faire une requête de type "}],["$","code","5",{"className":"code_root__5JLV_","children":"update"}],["$","span","6",{"children":" comme ceci :"}]]}],["$","div","29",{"className":"code_root__5JLV_","children":["$","code",null,{"children":["$","pre",null,{"children":"db.collection(\"users\").update(\n  {\n    _id: userId,\n  },\n  {\n    $set: {\n      user: {\n        name: \"new name\",\n        email: \"new@email.net\",\n      },\n    },\n  },\n  { multi: true },\n);"}]}]}],["$","p","30",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Comme vous pouvez le voir une fois encore, nos collections sont taillées selon l'usage que nous en faisons."}]]}],["$","h2","31",{"className":"h2_root__Y02lX","children":["$","span",null,{"className":"anchored_root__HWi6K","children":[[["$","span","0",{"children":"Linéarisation de l'appartenance"}]]," ",["$","small",null,{"children":["$","$L12",null,{"href":"#linearisation-de-l-appartenance","className":"anchored_icon__N5Sem","id":"linearisation-de-l-appartenance","title":"Lien vers cette section","children":["$","span",null,{"children":"🔗"}]}]}]]}]}],["$","p","32",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"On pourrait être tenté de donner à nos documents une structure qui reflète les relations d'appartenance entre les divers concepts qu'elles rassemblent. Par exemple, les préférences appartenant à l'utilisateur seraient peut-être mieux dans l'objet utilisateur."}]]}],["$","p","33",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"C'est clairement une mauvaise idée. Toujours pour pouvoir modifier ces concepts simplement, il est généralement préférable de linéariser les concepts au sein des documents."}]]}],["$","p","34",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"De la même façon, il est préférable d'aplatir les structures arborescentes dans un unique tableau quitte à la reconstituer en entrée et en sortie de votre API REST."}]]}],["$","p","35",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"En effet, pour tirer parti des performances des pipes d'agrégation, c'est une véritable nécessité."}]]}],["$","h2","36",{"className":"h2_root__Y02lX","children":["$","span",null,{"className":"anchored_root__HWi6K","children":[[["$","span","0",{"children":"Lazy embedding"}]]," ",["$","small",null,{"children":["$","$L12",null,{"href":"#lazy-embedding","className":"anchored_icon__N5Sem","id":"lazy-embedding","title":"Lien vers cette section","children":["$","span",null,{"children":"🔗"}]}]}]]}]}],["$","p","37",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Comme nous l'avions vu dans mon billet précédent, le point de compression des performances dans une application MongoDB est la gestion des relations inter collections. Puisqu'il n'existe pas de jointure, on fait parfois ce qui s'apparente au désormais bien connu "}],["$","code","1",{"className":"code_root__5JLV_","children":"SELECT"}],["$","span","2",{"children":" dans une boucle honni des DBA."}]]}],["$","p","38",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Bien qu'il y aura toujours des cas où ce ne sera pas possible de faire autrement, toutes les stratégies sont bonnes pour les éviter. Parmi elles, la technique que j'appelle le lazy embedding permet de stocker ces relations dans les collections afin d'éviter de les requêter à chaque accès."}]]}],["$","p","39",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Imaginons que nous voulions donner le nom des lieux d'un utilisateur dans la ressource du même nom. Nous devrions effectuer une requête pour aller chercher l'utilisateur, puis, une autre pour aller chercher les noms de ses lieux :"}]]}],["$","div","40",{"className":"code_root__5JLV_","children":["$","code",null,{"children":["$","pre",null,{"children":"db.collection(\"user\").find(\n  {\n    _id: ObjectId(\"abbacacaabbacacaabbacaca\"),\n  },\n  function (err, user) {\n    db.collection(\"locations\").update(\n      {\n        query: {\n          _id: {\n            $in: user.locations_ids,\n          },\n        },\n        fields: [\"_id\", \"location.name\"],\n      },\n      function (err, locations) {\n        user.locations = locations;\n      },\n      { multi: true },\n    );\n  },\n);"}]}]}],["$","p","41",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"L'idée du lazy embedding est de faire cette requête à la première demande, d'envoyer le résultat à l'utilisateur puis de la stocker pour les prochains appels, ce qui donne :"}]]}],["$","div","42",{"className":"code_root__5JLV_","children":["$","code",null,{"children":["$","pre",null,{"children":"db.collection(\"user\").find(\n  {\n    _id: ObjectId(\"abbacacaabbacacaabbacaca\"),\n  },\n  function (err, user) {\n    if (!user.locations) {\n      db.collection(\"locations\").find(\n        {\n          query: {\n            _id: {\n              $in: user.locations_ids,\n            },\n          },\n          fields: [\"_id\", \"location.name\"],\n        },\n        function (err, locations) {\n          user.locations = locations;\n          db.collection(\"user\").update(\n            {\n              _id: ObjectId(\"abbacacaabbacacaabbacaca\"),\n            },\n            {\n              $set: {\n                _locations: locations,\n              },\n            },\n            { multi: true },\n          );\n        },\n      );\n    }\n  },\n);"}]}]}],["$","p","43",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Bien entendu, dans les triggers de modification d'un lieu, nous devrons maintenant invalider les utilisateurs concernés par ce dernier :"}]]}],["$","div","44",{"className":"code_root__5JLV_","children":["$","code",null,{"children":["$","pre",null,{"children":"db.collection(\"user\").update(\n  {\n    locations_ids: {\n      $elemMatch: modifiedLocationId,\n    },\n  },\n  {\n    $unset: {\n      _locations: \"\",\n    },\n  },\n  { multi: true },\n);"}]}]}],["$","p","45",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Forcément, ceci présuppose que vos utilisateurs sont bien plus souvent consultés que vos lieux ne sont modifiés ce qui est généralement le cas dans la plupart des applications."}]]}],["$","p","46",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Dans le cas contraire, grâce à la linéarisation, il reste possible d'utiliser cette stratégie. Par exemple, imaginons que les tags des lieux changent très souvent, si les documents de la collection lieux sont structurés comme nos documents utilisateurs, nous n'aurons pas de problème."}]]}],["$","h2","47",{"className":"h2_root__Y02lX","children":["$","span",null,{"className":"anchored_root__HWi6K","children":[[["$","span","0",{"children":"Listes capées"}]]," ",["$","small",null,{"children":["$","$L12",null,{"href":"#listes-capees","className":"anchored_icon__N5Sem","id":"listes-capees","title":"Lien vers cette section","children":["$","span",null,{"children":"🔗"}]}]}]]}]}],["$","p","48",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Vous avez peut-être remarqué la propriété "}],["$","code","1",{"className":"code_root__5JLV_","children":"updates"}],["$","span","2",{"children":" dans la structure des documents utilisateurs. C'est un tableau dans lequel on stocke les divers updates de l'objet à des fins de débogage a posteriori."}]]}],["$","p","49",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Cependant, il nous faut bien caper ce tableau pour éviter qu'il ne sature nos documents. On trouve dans les divers opérateurs une possibilité de réaliser ce type d'opération en une seule requête. Ainsi, la modification d'un utilisateur devient :"}]]}],["$","div","50",{"className":"code_root__5JLV_","children":["$","code",null,{"children":["$","pre",null,{"children":"db.collection('users').update({\n  _id: userId\n}, {\n  $set: {\n    'user': {\n      name: 'new name',\n      email: 'new@email.net'\n    }\n  }, {\n    $push : {\n      updates: {\n        $each: [{\n          when: new Date(),\n          by: connectedUserId,\n          ip: connectedUserIp\n        }],\n        $slice: -10\n      }\n    }\n  }\n}, {multi: true});"}]}]}],["$","p","51",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Cet exemple montre encore une fois l'intérêt du driver MongoDB natif. Comme il n'existe pas de notion de transaction en Mongo, nous devons tout faire pour limiter la concurrence des requêtes et quoi de mieux pour ce faire que de limiter leur nombre ?"}]]}],["$","p","52",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Il y a encore tellement de techniques dont je n'ai pas parlé, mais cet article étant déjà très long, je vous dévoilerai certainement ces dernières dans d'autres billets."}]]}],["$","p","53",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"En attendant, n'hésitez pas à me livrer les vôtres en commentaire ou à donner des alternatives aux techniques que je vous ai présenté."}]]}],["$","p","54",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Petite précision, j'ai du faire une modification des sources présentées dans cet article pour ajouter les options "}],["$","code","1",{"className":"code_root__5JLV_","children":"{multi: true}"}],["$","span","2",{"children":" qui permettent aux requêtes de mise à jour de fonctionner sur plusieurs entrées. C'est un peu bizarre, mais c'est comme ça, par défaut les requêtes de mise à jour ne modifient que la première entrée."}]]}],["$","p","55",{"className":"p_root__SHE_W","children":[["$","span","0",{"children":"Je vous propose de monter en abstraction en vous proposant "}],["$","$L12","1",{"href":"./design_probabiliste_mongodb","className":"a_root__WEPS7","title":null,"target":"_self","children":[null,[["$","span","0",{"children":"ma vision probabiliste de l'utilisation de MongoDB"}]]]}],["$","span","2",{"children":"."}]]}]],["$","p",null,{"className":"p_root__SHE_W","children":["Published at"," ","samedi 28 mars 2015 à 13:40:32","."]}]]}],["$","section",null,{"className":"contentBlock_root__802UK","children":["$","aside",null,{"className":"share_root__Qm_RR","children":[["$","h2",null,{"className":"h2_root__Y02lX","children":"Commenter et partager"}],["$","p",null,{"className":"p_root__SHE_W","children":[["$","$L12",null,{"href":"https://www.facebook.com/dialog/share?display=popup&href=https%3A%2F%2Finsertafter.com%2Fblog%2Fdesign_base_donnee_mongodb&redirect_uri=https%3A%2F%2Finsertafter.com","className":"a_root__WEPS7","title":"Commenter sur Facebook","target":"_blank","children":[null,[["$","span",null,{"className":"share_icon__bi4Q3 share_facebook__JKn8d"}],"Facebook"]]}]," - ",["$","$L12",null,{"href":"https://bsky.app/intent/compose?text=https%3A%2F%2Finsertafter.com%2Fblog%2Fdesign_base_donnee_mongodb","className":"a_root__WEPS7","title":"Commenter sur Bluesky","target":"_blank","children":[null,[["$","span",null,{"className":"share_icon__bi4Q3 share_bluesky__ahvrM"}],"Bluesky"]]}]," - ",["$","$L12",null,{"href":"mailto:nicolas.froidure@gmail.com?subject=Design%20de%20bases%20de%20donn%C3%A9es%20MongoDB","className":"a_root__WEPS7","title":"Me répondre par mail","target":"_self","children":[null,[["$","span",null,{"className":"share_icon__bi4Q3 share_mail__yvBDK"}],"Courriel"]]}]]}]]}]}],["$","section",null,{"className":"contentBlock_root__802UK","children":["$","aside",null,{"className":"page_linkedEntries__jiPuT","children":[["$","h2",null,{"className":"h2_root__Y02lX","children":"Articles similaires"}],["$","p",null,{"className":"p_root__SHE_W","children":["Dans les catégories"," ","MongoDB et Base de données","."]}],["$","div",null,{"className":"items_entries__5hkLG","children":[["$","div","retour_xp_mongodb",{"className":"items_entry_item__GWeg7","children":[null,["$","h2",null,{"className":"h2_root__Y02lX items_entry_title__vJ_8h","children":["$","$L12",null,{"href":".//retour_xp_mongodb","className":"a_root__WEPS7 items_entry_link__EtVod","title":"Lire cet article de blog","target":"_self","children":[null,"MongoDB : Retour d'expérience"]}]}],["$","p",null,{"className":"p_root__SHE_W items_entry_description__ZWt9y","children":["Je travaille avec MongoDB depuis maintenant presque un an, il est temps pour moi de faire un petit retour sur cette base de données et sur le NoSQL de manière générale."," ",["$","br",null,{}],["$","$L12",null,{"href":".//retour_xp_mongodb","className":"a_root__WEPS7","title":"Lire cet article de blog","target":"_self","children":[null,"Lire la suite"]}]]}],["$","p",null,{"className":"p_root__SHE_W items_entry_time__iNrot","children":["Published at"," ","jeudi 4 décembre 2014 à 20:44:40","."]}],["$","div",null,{"className":"items_clear__3fyGk"}]]}],["$","div","gerer_monnaies_logiciel",{"className":"items_entry_item__GWeg7","children":[null,["$","h2",null,{"className":"h2_root__Y02lX items_entry_title__vJ_8h","children":["$","$L12",null,{"href":".//gerer_monnaies_logiciel","className":"a_root__WEPS7 items_entry_link__EtVod","title":"Lire cet article de blog","target":"_self","children":[null,"Gérer les monnaies dans un logiciel (CRM,ERP)"]}]}],["$","p",null,{"className":"p_root__SHE_W items_entry_description__ZWt9y","children":["Je suis actuellement entrain de développer une solution CRM basée sur mon framework Rest PHP. Il faut donc gérer les différentes monnaies."," ",["$","br",null,{}],["$","$L12",null,{"href":".//gerer_monnaies_logiciel","className":"a_root__WEPS7","title":"Lire cet article de blog","target":"_self","children":[null,"Lire la suite"]}]]}],["$","p",null,{"className":"p_root__SHE_W items_entry_time__iNrot","children":["Published at"," ","vendredi 16 novembre 2012 à 10:24:57","."]}],["$","div",null,{"className":"items_clear__3fyGk"}]]}],["$","div","champs_set_et_group_by",{"className":"items_entry_item__GWeg7","children":[null,["$","h2",null,{"className":"h2_root__Y02lX items_entry_title__vJ_8h","children":["$","$L12",null,{"href":".//champs_set_et_group_by","className":"a_root__WEPS7 items_entry_link__EtVod","title":"Lire cet article de blog","target":"_self","children":[null,"Les champs SET et les requêtes GROUP BY"]}]}],["$","p",null,{"className":"p_root__SHE_W items_entry_description__ZWt9y","children":["J'adore utiliser les champs de type SET pour leur souplesse et leur nature multivaluées, mais quand GROUP BY entre dans la place, attention les dégâts !"," ",["$","br",null,{}],["$","$L12",null,{"href":".//champs_set_et_group_by","className":"a_root__WEPS7","title":"Lire cet article de blog","target":"_self","children":[null,"Lire la suite"]}]]}],["$","p",null,{"className":"p_root__SHE_W items_entry_time__iNrot","children":["Published at"," ","mardi 28 août 2012 à 09:34:25","."]}],["$","div",null,{"className":"items_clear__3fyGk"}]]}]]}]]}]}]]
8:null
c:[["$","title","0",{"children":"Design de bases de données MongoDB - Nicolas Froidure"}],["$","meta","1",{"name":"description","content":"Le design de bases de données MongoDB est une activité complexe qui nécessite d'avoir une profonde connaissance des implications des divers choix possibles."}],["$","link","2",{"rel":"author","href":"https://insertafter.com"}],["$","meta","3",{"name":"author","content":"Nicolas Froidure"}],["$","meta","4",{"name":"robots","content":"index, follow"}],["$","link","5",{"rel":"canonical","href":"https://insertafter.com/fr/blog/design_base_donnee_mongodb"}],["$","meta","6",{"property":"og:title","content":"Design de bases de données MongoDB - Nicolas Froidure"}],["$","meta","7",{"property":"og:description","content":"Le design de bases de données MongoDB est une activité complexe qui nécessite d'avoir une profonde connaissance des implications des divers choix possibles."}],["$","meta","8",{"property":"og:url","content":"https://insertafter.com/fr/blog/design_base_donnee_mongodb"}],["$","meta","9",{"property":"og:site_name","content":"Nicolas Froidure"}],["$","meta","10",{"property":"og:locale","content":"fr_FR"}],["$","meta","11",{"property":"og:image:alt","content":"Bannière du site"}],["$","meta","12",{"property":"og:image","content":"https://insertafter.com/images/banner.png"}],["$","meta","13",{"property":"og:type","content":"article"}],["$","meta","14",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","15",{"name":"twitter:title","content":"Design de bases de données MongoDB - Nicolas Froidure"}],["$","meta","16",{"name":"twitter:description","content":"Le design de bases de données MongoDB est une activité complexe qui nécessite d'avoir une profonde connaissance des implications des divers choix possibles."}],["$","meta","17",{"name":"twitter:image:alt","content":"Bannière du site"}],["$","meta","18",{"name":"twitter:image","content":"https://insertafter.com/images/banner.png"}],["$","link","19",{"rel":"icon","href":"/images/favicon.svg","type":"image/svg+xml","sizes":"any"}],["$","link","20",{"rel":"icon","href":"/images/favicon-16.png","type":"image/png","sizes":"16x16"}],["$","link","21",{"rel":"icon","href":"/images/favicon-128.png","type":"image/png","sizes":"128x128"}]]
